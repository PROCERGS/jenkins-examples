pipeline {
    agent { label 'php' }

    stages {
        stage('Build') {
            steps {
                sh 'composer install'
            }
        }
        stage('Run Tests') {
            steps {
                sh 'composer test -- --coverage-clover=clover.xml --log-junit=junit.xml'
            }
        }
        stage('SonarQube analysis') {
            steps {
                script {
                    scannerHome = tool 'SonarQube Scanner 2.8'
                }
                withSonarQubeEnv('sonar_procergs') {
                    sh "${scannerHome}/bin/sonar-scanner"
                }
            }
        }
        stage('Quality Gate') {
            steps {
                timeout(time: 5, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }
        // Artifactory examples:
        // https://github.com/jfrog/project-examples/tree/master/jenkins-examples/pipeline-examples
        stage('Archive') {
            steps {
                // sh 'mkdir dist'
                // zip zipFile: 'dist/procergs-YOUR_PACKAGE_NAME-1.1.0.zip', archive: false, dir: '.'
                // archiveArtifacts artifacts: 'dist/procergs-YOUR_PACKAGE_NAME-1.1.0.zip'
                sh 'composer archive --format=zip --dir=dist'

                script {
                    def artifactory = Artifactory.server('artifactory')
                    def buildInfo = Artifactory.newBuildInfo()
                    def uploadSpec = """{
                        "files": [{
                            "pattern": "dist/*.zip",
                            "target": "php-local/procergs/YOUR_PACKAGE_NAME/"
                        }]
                    }"""
                    artifactory.upload spec: uploadSpec, buildInfo: buildInfo
                    artifactory.publishBuildInfo buildInfo
                }
            }
        }
    }
    post {
        always {
            deleteDir()
        }
    }
}
